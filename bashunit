#!/usr/bin/env bash


base_dir="$(readlink -f "$(dirname "${0}")")"
passed_count=0
failed_count=0

_test_prefix='test__'

_color_red=1
_color_green=2
_color_yellow=3
_color_blue=4
_color_white=7

tests=($(grep -E "^${_test_prefix}" "${0}" | cut -d'(' -f1 | sed "s/${_test_prefix}//"))
if [ ${#tests[@]} -eq 0 ]; then
    echo "Error: bunit found no tests in '${0}'" > /dev/stderr
    exit 1
fi

_bold() {
    tput bold
    echo -n $@
    tput sgr0
}

_color() {
    local color=$1; shift
    tput setaf "${color}"
    echo -n $@
    tput setaf 9
}

alert() {
    echo "$(_color ${_color_red} "$(_bold $@)")"
}

_run_if_exists() {
    local name="${1}"; shift
    local kind=$(type -t "${name}" 2> /dev/null)
    if [ "${kind}" == 'function' ]; then
        "${name}" $@
    fi
}

_on_exit() {
    echo $(_color ${_color_white} $(_bold 'Summary:'))
    echo
    echo -n 'passed: '
    echo -n $(_color ${_color_green} $(_bold "${passed_count}"))
    echo -n ' / errors: '
    echo $(_color ${_color_red} $(_bold "${failed_count}"))
    echo
    echo $(_color ${_color_yellow} $(_bold 'done.'))
    exit ${failed_count}
}
trap _on_exit EXIT

assert() {
    local name="${1}"; shift
    local expected="${1}"; shift
    local operator="${1}"; shift
    local observed="${1}"; shift

    echo -n "assertion '"
    echo -n $(_color ${_color_white} "${name}")
    echo -n "': "
    $(eval "[ '${expected}' ${operator} '${observed}' ] && true || false")
    if [ ${?} -eq 0 ]; then
        success=0
        echo -n $(_color ${_color_green} $(_bold 'passed'))
    else
        success=1
        echo -n $(_color ${_color_red} $(_bold 'failed'))
    fi

    echo -n $(_color ${_color_white} " - expected '")
    echo -n $(_color ${_color_yellow} "${expected}")
    echo -n $(_color ${_color_white} "' - observed '")
    echo -n $(_color ${_color_yellow} "${observed}")
    echo -n $(_color ${_color_white} "'")
    echo
    echo

    return ${success}
}

run() {
    if [ ${#} -eq 0 ]; then
        tests_to_run=(${tests[@]})
    else
        tests_to_run=(${@})
    fi

    echo -n "$(_color ${_color_yellow} "$(_bold "BASHUnit Start:")") -- "
    echo -n "running "
    echo $(_color ${_color_white} "${#tests_to_run[@]} test(s)")
    echo

    _run_if_exists 'before_script'
    for test in ${tests_to_run[@]}; do
        _run_if_exists 'before_test'

        echo $(_color ${_color_white} '--------------------------------------------------')
        echo -n 'starting test: '
        echo $(_color ${_color_blue} "${test}")
        echo $(_color ${_color_white} '--------------------------------------------------')
        local passed=0
        if "${_test_prefix}${test}"; then
            passed_count=$(( passed_count + 1 ))
        else
            passed=1
            failed_count=$(( failed_count + 1 ))
        fi
        echo
        echo -n '[ test '
        if [ ${passed} -eq 0 ]; then
            echo -n $(_color ${_color_green} $(_bold 'passed'))
        else
            echo -n $(_color ${_color_red} $(_bold 'failed'))
        fi
        echo ' ]'
        echo
        echo

        _run_if_exists 'after_test' ${passed}
    done
    _run_if_exists 'after_script' ${passed_count} ${failed_count}
}

run $@
